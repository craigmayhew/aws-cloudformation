{
    "AWSTemplateFormatVersion" : "2010-09-09",
    "Description"              : "Generate a VPC, Security Groups, Ubuntu Desktop, EFS (For user data).",
    "Parameters"               : {
        "ParamInstanceType" : {
            "Description" : "Desktop EC2 instance type",
            "Type"        : "String",
            "Default"     : "m1.small",
            "AllowedValues" : [
                "m1.small",
                "m1.medium",
                "m1.large",
                "m1.xlarge",
                "m2.xlarge",
                "m3.2xlarge",
                "c1.xlarge",
                "c3.4xlarge"
            ],
            "ConstraintDescription" : "must be a valid EC2 instance type."
        },
        "ParamElasticfileSystem" : {
			"Description" : "EFS to store the home directory on. EFS resource ID, such as fs-47a2c22e.",
            "Type" : "AWS::EFS::FileSystem"
        },
        "ParamWebDirMountPoint" : {
            "AllowedValues" : [
                "/home/user"
            ],
            "Default"       : "/home/user",
            "Type"          : "String"
        },
        "ParamKeyName"          : {
            "Type" : "AWS::EC2::KeyPair::KeyName",
            "Description" : "Name of an existing EC2 key pair to enable SSH access to the ECS instances"
        },
        "AccessKeyID"           : {
            "Description" : "Access key for accessing S3. These are normally associated to an AWS user.",
            "NoEcho"      : "true",
            "Type"        : "String"
        },
        "SecretAccessKeyID"     : {
            "Description" : "Secret access key for accessing S3. These are normally associated to an AWS user.",
            "NoEcho"      : "true",
            "Type"        : "String"
        }
    },
    "Mappings"                 : {
        "AWSInstanceType2Arch" : {
            "m1.small" : {
                "Arch" : "64"
            },
            "m1.medium" : {
                "Arch" : "64"
            },
            "m1.large"  : {
                "Arch" : "64"
            },
            "m1.xlarge" : {
                "Arch" : "64"
            },
            "m2.xlarge" : {
                "Arch" : "64"
            },
            "m3.2xlarge" : {
                "Arch" : "64"
            },
            "c1.xlarge"  : {
                "Arch" : "64"
            },
            "c3.4xlarge" : {
                "Arch" : "64"
            }
        },
        "AWSRegionArch2AMI"    : {
            "eu-west-1" : {
                "64" : "ami-45026036"
            }
        }
    },
    "Resources"                : {
        "desktopPlatform" : {
            "Type" : "AWS::EC2::VPC",
            "Properties" : {
                "CidrBlock" : "10.0.0.0/16",
                "EnableDnsSupport" : "true",
                "EnableDnsHostnames" : "true",
                "InstanceTenancy"    : "default",
                "Tags"               : [
                    {
                        "Key" : "Application",
                        "Value" : {
                            "Ref" : "AWS::StackName"
                        }
                    }
                ]
            }
        },
        "SubnetId"               : {
            "Type" : "AWS::EC2::Subnet",
            "Properties" : {
                "AvailabilityZone" : "eu-west-1a",
                "CidrBlock"        : "10.0.0.0/24",
                "MapPublicIpOnLaunch" : "true",
                "Tags"                : [
                    {
                        "Key" : "Application",
                        "Value" : {
                            "Ref" : "AWS::StackName"
                        }
                    }
                ],
                "VpcId"               : {
                    "Ref" : "desktopPlatform"
                }
            }
        },
        "DesktopSecurityGroup"  : {
            "Type" : "AWS::EC2::SecurityGroup",
            "Properties" : {
                "GroupDescription" : "Enable HTTP, HTTPS, SSH",
                "SecurityGroupIngress" : [
                    {
                        "IpProtocol" : "tcp",
                        "FromPort"   : "22",
                        "ToPort"     : "22",
                        "CidrIp"     : "0.0.0.0/0"
                    }
                ],
                "VpcId"                : {
                    "Ref" : "desktopPlatform"
                }
            }
        },
        "SecurityGroupFileSystem" : {
            "Type" : "AWS::EC2::SecurityGroup",
            "Properties" : {
                "GroupDescription" : "SG for EFS",
                "SecurityGroupIngress" : [
                    {
                        "IpProtocol" : "tcp",
                        "FromPort"   : "2049",
                        "ToPort"     : "2049",
                        "CidrIp"     : "0.0.0.0/0"
                    }
                ],
                "Tags"                 : [
                    {
                        "Key" : "Application",
                        "Value" : {
                            "Ref" : "AWS::StackName"
                        }
                    }
                ],
                "VpcId"                : {
                    "Ref" : "desktopPlatform"
                }
            }
        },
        "WaitHandle"              : {
            "Type" : "AWS::CloudFormation::WaitConditionHandle"
        },
        "WaitCondition"           : {
            "Type" : "AWS::CloudFormation::WaitCondition",
            "DependsOn" : "Desktop",
            "Properties" : {
                "Handle" : {
                    "Ref" : "WaitHandle"
                },
                "Timeout" : "600"
            }
        },
        "InternetGateway"         : {
            "Type" : "AWS::EC2::InternetGateway",
            "Properties" : {
                "Tags" : [
                    {
                        "Key" : "Application",
                        "Value" : {
                            "Ref" : "AWS::StackId"
                        }
                    }
                ]
            }
        },
        "AttachGateway"           : {
            "DependsOn" : "InternetGateway",
            "Type"      : "AWS::EC2::VPCGatewayAttachment",
            "Properties" : {
                "VpcId" : {
                    "Ref" : "desktopPlatform"
                },
                "InternetGatewayId" : {
                    "Ref" : "InternetGateway"
                }
            }
        },
        "MyRouteTable"            : {
            "Type" : "AWS::EC2::RouteTable",
            "Properties" : {
                "VpcId" : {
                    "Ref" : "desktopPlatform"
                },
                "Tags"  : [
                    {
                        "Key" : "Application",
                        "Value" : {
                            "Ref" : "AWS::StackId"
                        }
                    }
                ]
            }
        },
        "Route"                   : {
            "Type" : "AWS::EC2::Route",
            "DependsOn" : [
                "AttachGateway",
                "MyRouteTable"
            ],
            "Properties" : {
                "RouteTableId" : {
                    "Ref" : "MyRouteTable"
                },
                "DestinationCidrBlock" : "0.0.0.0/0",
                "GatewayId"            : {
                    "Ref" : "InternetGateway"
                }
            }
        },
        "SubnetRouteTableAssociationA" : {
            "DependsOn" : [
                "SubnetId",
                "MyRouteTable"
            ],
            "Properties" : {
                "SubnetId" : {
                    "Ref" : "SubnetId"
                },
                "RouteTableId" : {
                    "Ref" : "MyRouteTable"
                }
            },
			"Type" : "AWS::EC2::SubnetRouteTableAssociation"
        },
        "Desktop"                    : {
            "Type" : "AWS::EC2::Instance",
            "Metadata" : {
                "Comment1" : "Configure the bootstrap helpers to install the Apache Web Server and PHP",
                "Comment2" : "The website content is downloaded from the CloudFormationPHPSample.zip file",
                "AWS::CloudFormation::Init" : {
                    "config" : {
                        "packages" : {
                            "apt" : {
                                "x2goserver" : [], 
								"x2goserver-xsession" : [], 
								"xfce4" : [],
								"xfce4-terminal" : [], 
								"xfce4-artwork" : [],
								"xubuntu-icon-theme" : [],
								"firefox" : [],
								"mousepad" : []
                            }
                        },
                        "mount"    : {
                            "commands" : {
                                "01_mount" : {
                                    "command" : {
                                        "Fn::Join" : [
                                            "",
                                            [
                                                "mount -t nfs4 $(curl -s http://169.254.169.254/latest/meta-data/placement/availability-zone).",
                                                {
                                                    "Ref" : "ParamElasticfileSystem"
                                                },
                                                ".efs.",
                                                {
                                                    "Ref" : "AWS::Region"
                                                },
                                                ".amazonaws.com:/ ",
                                                {
                                                    "Ref" : "ParamWebDirMountPoint"
                                                }
                                            ]
                                        ]
                                    }
                                },
                                "02_permissions" : {
                                    "command" : {
                                        "Fn::Join" : [
                                            "",
                                            [
                                                "chown ec2-user:ec2-user ",
                                                {
                                                    "Ref" : "ParamWebDirMountPoint"
                                                }
                                            ]
                                        ]
                                    }
                                }
                            }
                        }
                    }
                },
                "AWS::CloudFormation::Authentication" : {
                    "S3" : {
                        "type" : "S3",
                        "accessKeyId" : {
                            "Ref" : "AccessKeyID"
                        },
                        "secretKey"   : {
                            "Ref" : "SecretAccessKeyID"
                        },
                        "buckets"     : [
                            "adire-app-webhosting-service"
                        ]
                    }
                }
            },
            "Properties" : {
                "ImageId" : {
                    "Fn::FindInMap" : [
                        "AWSRegionArch2AMI",
                        {
                            "Ref" : "AWS::Region"
                        },
                        {
                            "Fn::FindInMap" : [
                                "AWSInstanceType2Arch",
                                {
                                    "Ref" : "ParamInstanceType"
                                },
                                "Arch"
                            ]
                        }
                    ]
                },
                "InstanceType" : {
                    "Ref" : "ParamInstanceType"
                },
                "KeyName"      : {
                    "Ref" : "ParamKeyName"
                },
                "NetworkInterfaces" : [
                    {
                        "GroupSet" : [
                            {
                                "Ref" : "DesktopSecurityGroup"
                            }
                        ],
                        "AssociatePublicIpAddress" : "true",
                        "DeviceIndex"              : "0",
                        "DeleteOnTermination"      : "true",
                        "SubnetId"                 : {
                            "Ref" : "SubnetId"
                        }
                    }
                ],
                "Tags"              : [
                    {
                        "Key" : "Application",
                        "Value" : {
                            "Ref" : "AWS::StackName"
                        }
                    }
                ],
                "UserData"          : {
                    "Fn::Base64" : {
                        "Fn::Join" : [
                            "",
                            [
                                "#!/bin/bash -v\n",
                                "yum update -y aws-cfn-bootstrap\n",
								"# nfs-utils is used by EFS mount command\n",
								"yum install -y nfs-utils\n",
                                "# Helper function\n",
                                "function error_exit\n",
                                "{\n",
                                "  /opt/aws/bin/cfn-signal -e 1 -r \"$1\" '",
                                {
                                    "Ref" : "WaitHandle"
                                },
                                "'\n",
                                "  exit 1\n",
                                "}\n",
                                "# Install LAP packages\n",
                                "/opt/aws/bin/cfn-init -s ",
                                {
                                    "Ref" : "AWS::StackId"
                                },
                                " -r Desktop --region ",
                                {
                                    "Ref" : "AWS::Region"
                                },
                                " || error_exit 'Failed to run cfn-init'\n",
                                "# Web dir is /srv/\n",
                                "# All is well so signal success\n",
                                "/opt/aws/bin/cfn-signal -e 0 -r \"LAP Stack setup complete\" '",
                                {
                                    "Ref" : "WaitHandle"
                                },
                                "'\n"
                            ]
                        ]
                    }
                }
            }
        }
    },
    "Outputs"                  : {
        "DesktopURL" : {
            "Value" : {
                "Fn::Join" : [
                    "",
                    [
                        "http://",
                        {
                            "Fn::GetAtt" : [
                                "Desktop",
                                "PublicDnsName"
                            ]
                        }
                    ]
                ]
            },
            "Description" : "URL for newly created x2go ubuntu desktop"
        }
    }
}