---
AWSTemplateFormatVersion: '2010-09-09'
Parameters:
  KeyName:
    Type: AWS::EC2::KeyPair::KeyName
    Description: Name of an existing EC2 key pair to enable SSH access to the instances.
  InstanceType:
    Description: EC2 instance type/size
    Type: String
    Default: t2.micro
    AllowedValues:
    - t2.micro
    - t2.small
    - t2.medium
    - t2.large
    - m3.medium
    - m3.large
    - m3.xlarge
    - m3.2xlarge
    - m4.large
    - m4.xlarge
    - m4.2xlarge
    - m4.4xlarge
    - m4.10xlarge
    - c4.large
    - c4.xlarge
    - c4.2xlarge
    - c4.4xlarge
    - c4.8xlarge
    - c3.large
    - c3.xlarge
    - c3.2xlarge
    - c3.4xlarge
    - c3.8xlarge
    - r3.large
    - r3.xlarge
    - r3.2xlarge
    - r3.4xlarge
    - r3.8xlarge
    - i2.xlarge
    - i2.2xlarge
    - i2.4xlarge
    - i2.8xlarge
    - p2.xlarge
    ConstraintDescription: Please choose a valid instance type.
  DNSPrefix:
    Default: currentdate-
    # To ensure if you bring a live and a test environment up, the DNS entries remains unique
    Description: currentdate-ws.mayhew.io
    Type: String
Resources:
  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security Group
      VpcId:
        Ref: VPC
  SecurityGroupRDPinbound:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId:
        Ref: SecurityGroup
      IpProtocol: tcp
      FromPort: '3389'
      ToPort: '3389'
      CidrIp: 0.0.0.0/0
  CloudwatchLogsGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName:
        Fn::Join:
        - "-"
        - - LogGroup
          - Ref: AWS::StackName
      RetentionInDays: 14
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
      - Key: Application
        Value:
          Ref: AWS::StackId
  AttachGateway:
    DependsOn:
    - InternetGateway
    - VPC
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: VPC
      InternetGatewayId:
        Ref: InternetGateway
  MyRouteTable:
    DependsOn: VPC
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPC
      Tags:
      - Key: Application
        Value:
          Ref: AWS::StackId
  Route:
    Type: AWS::EC2::Route
    DependsOn:
    - AttachGateway
    - MyRouteTable
    Properties:
      RouteTableId:
        Ref: MyRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: InternetGateway
  SubnetRouteTableAssociationA:
    DependsOn:
    - SubnetIdA
    - MyRouteTable
    Properties:
      SubnetId:
        Ref: SubnetIdA
      RouteTableId:
        Ref: MyRouteTable
    Type: AWS::EC2::SubnetRouteTableAssociation
  SubnetRouteTableAssociationB:
    DependsOn:
    - SubnetIdB
    - MyRouteTable
    Properties:
      SubnetId:
        Ref: SubnetIdB
      RouteTableId:
        Ref: MyRouteTable
    Type: AWS::EC2::SubnetRouteTableAssociation
  Workstation:
    Type: AWS::EC2::Instance
    Metadata:
      AWS::CloudFormation::Init:
        commands:
          1-run-windows-update:
            command: wuauclt.exe /detectnow /updatenow
    Properties:
      ImageId:
        ami-f2495e96
      NetworkInterfaces:
      - GroupSet:
        - Ref: SecurityGroup
        AssociatePublicIpAddress: 'true'
        DeviceIndex: '0'
        DeleteOnTermination: 'true'
        SubnetId:
          Ref: SubnetIdB
      InstanceType:
        Ref: InstanceType
      KeyName:
        Ref: KeyName
      BlockDeviceMappings:
      - DeviceName: "/dev/sda1"
        Ebs:
          VolumeSize: '100'
          VolumeType: gp2
      UserData:
        Fn::Base64: !Sub |
          <powershell>
            PowerShell.exe -ExecutionPolicy unrestricted
            iwr https://chocolatey.org/install.ps1 -UseBasicParsing | iex
            choco install -y arcanist
            choco install -y boxstarter
            choco install -y composer
            choco install -y conemu
            choco install -y docker
            choco install -y docker-machine
            choco install -y docker-compose
            choco install -y git
            choco install -y grepwin
            choco install -y heidisql
            choco install -y jetbrainstoolbox
            choco install -y notepadplusplus
            choco install -y php
            choco install -y phpstorm
            choco install -y putty
            choco install -y slack
            choco install -y skype
            choco install -y superputty
            choco install -y steam
            choco install -y tortoisegit
            choco install -y vagrant
            choco install -y virtualbox
            choco install -y winmerge
            choco install -y winscp
            BOXSTARTERSHELL
            Set-WindowsExplorerOptions -EnableShowHiddenFilesFoldersDrives -EnableShowProtectedOSFiles -EnableShowFileExtensions -EnableShowFullPathInTitleBar
            Disable-BingSearch
            Enable-RemoteDesktop
            |2
            # end of script
            cfn-init.exe -v -s Ref: AWS::StackId -r Workstation --region Ref: AWS::Region
            cfn-signal.exe -e $lastexitcode --stack Ref: AWS::StackName --resource AutoScalingGroup -region  Ref: AWS::Region;
          </powershell>
          <persist>true</persist>
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: 'true'
      EnableDnsHostnames: 'true'
      InstanceTenancy: default
      Tags:
      - Key: Application
        Value:
          Ref: AWS::StackName
      - Key: Name
        Value:
          Ref: AWS::StackName
  SubnetIdA:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: eu-west-1a
      CidrBlock: 10.0.0.0/24
      MapPublicIpOnLaunch: 'true'
      Tags:
      - Key: Application
        Value:
          Ref: AWS::StackName
      VpcId:
        Ref: VPC
  SubnetIdB:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: eu-west-1b
      CidrBlock: 10.0.1.0/24
      MapPublicIpOnLaunch: 'true'
      Tags:
      - Key: Application
        Value:
          Ref: AWS::StackName
      VpcId:
        Ref: VPC
  DNSRecordWorkStation:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneName: mayhew.io.
      Comment: Workstation url.
      Name:
        Fn::Join:
        - ''
        - - Ref: DNSPrefix
          - ws.mayhew.io.
      Type: CNAME
      TTL: '300'
      ResourceRecords:
      - Fn::GetAtt:
        - Workstation
        - PublicDnsName
Outputs:
  EC2RDP:
    Description: Your instance url, username is Administrator
    Value:
      Fn::Join:
      - ''
      - - Fn::GetAtt:
          - Workstation
          - PublicDnsName
