{
    "AWSTemplateFormatVersion" : "2010-09-09",
    "Description"              : "Generate a VPC, Security Group, Windows Desktop and attach an existing EBS.",
    "Parameters"               : {
        "ParamInstanceType" : {
            "Description" : "Windows Desktop EC2 instance type",
            "Type"        : "String",
            "Default"     : "m3.medium",
            "AllowedValues" : [
                "m3.medium",
                "m3.2xlarge",
                "c1.xlarge",
                "c3.4xlarge"
            ],
            "ConstraintDescription" : "Must be a valid EC2 instance type."
        },
        "ParamElasticBlockStorage" : {
			"Description" : "EBS Volume to store the home directory on. EBS resource ID.",
            "Type" : "AWS::EC2::Volume::Id"
        },
        "ParamKeyName"          : {
            "Type" : "AWS::EC2::KeyPair::KeyName",
            "Description" : "Name of an existing EC2 key pair to enable SSH access to the ECS instances"
        },
        "VPC"     : {
            "Description" : "VPC for the new desktop VM.",
            "Type"        : "AWS::EC2::VPC::Id"
        }
    },
    "Resources"                : {
        "SubnetId"               : {
            "Type" : "AWS::EC2::Subnet",
            "Properties" : {
                "AvailabilityZone" : "eu-west-1a",
                "CidrBlock"        : "172.30.27.0/24",
                "MapPublicIpOnLaunch" : "true",
                "Tags"                : [
                    {
                        "Key" : "Application",
                        "Value" : {
                            "Ref" : "AWS::StackName"
                        }
                    }
                ],
                "VpcId"               : {
                    "Ref" : "VPC"
                }
            }
        },
        "DesktopSecurityGroup"  : {
            "Type" : "AWS::EC2::SecurityGroup",
            "Properties" : {
                "GroupDescription" : "Enable RDP",
                "SecurityGroupIngress" : [
                    {
                        "IpProtocol" : "tcp",
                        "FromPort"   : "3389",
                        "ToPort"     : "3389",
                        "CidrIp"     : "0.0.0.0/0"
                    }
                ],
                "VpcId"                : {
                    "Ref" : "VPC"
                }
            }
        },
        "InternetGateway" : {
            "Type" : "AWS::EC2::InternetGateway",
            "Properties" : {
                "Tags" : [
                    {
                        "Key" : "Application",
                        "Value" : {
                            "Ref" : "AWS::StackId"
                        }
                    }
                ]
            }
        },
		"myDNSRecord" : {
		  "Type" : "AWS::Route53::RecordSet",
		  "Properties" : {
			 "HostedZoneName" : "mayhew.io.",
			 "Comment" : "DNS name for my instance.",  
			 "Name" : "cmdesktop.mayhew.io.",
			 "Type" : "A",
			 "TTL" : "90",
			 "ResourceRecords" : [
				{ "Fn::GetAtt" : [ "Desktop", "PublicIp" ] }
			 ]
		  }
		},
		"EBS" : {
		   "Type":"AWS::EC2::VolumeAttachment",
		   "Properties" : {
			  "Device" : "/dev/xvdc",
			  "InstanceId" : {"Ref" : "Desktop"},
			  "VolumeId" : {"Ref" : "ParamElasticBlockStorage"}
		   }
		},
        "Desktop" : {
            "Type" : "AWS::EC2::Instance",
            "Metadata" : {
				"AWS::CloudFormation::Init" : {
				  "config" : {
					"files" : {
					  "c:\\cfn\\cfn-hup.conf" : {
						"content" : { "Fn::Join" : ["", [
						  "[main]\n",
						  "stack=", { "Ref" : "AWS::StackId" }, "\n",
						  "region=", { "Ref" : "AWS::Region" }, "\n"
						  ]]}
					  },
					  "c:\\cfn\\hooks.d\\cfn-auto-reloader.conf" : {
						"content": { "Fn::Join" : ["", [
						  "[cfn-auto-reloader-hook]\n",
						  "triggers=post.update\n",
						  "path=Resources.Desktop.Metadata.AWS::CloudFormation::Init\n",
						  "action=cfn-init.exe -v -s ", { "Ref" : "AWS::StackId" },
														 " -r Desktop",
														 " --region ", { "Ref" : "AWS::Region" }, "\n"
						]]}
					  }
					},
					"services" : {
					  "windows" : {
						"cfn-hup" : {
						  "enabled" : "true",
						  "ensureRunning" : "true",
						  "files" : ["c:\\cfn\\cfn-hup.conf", "c:\\cfn\\hooks.d\\cfn-auto-reloader.conf"]
						}
					  }
					}
				  }
				}
            },
            "Properties" : {
                "ImageId" : "ami-a8592cdb",
                "InstanceType" : {
                    "Ref" : "ParamInstanceType"
                },
                "KeyName"      : {
                    "Ref" : "ParamKeyName"
                },
				"BlockDeviceMappings": [
					{
						"DeviceName": "/dev/sda1",
						"Ebs" : {"VolumeSize": "100"}
					},
					{ "DeviceName" : "xvdc", "Ebs" : { "VolumeSize" : "100" } }
				],
                "NetworkInterfaces" : [
                    {
                        "GroupSet" : [
                            {
                                "Ref" : "DesktopSecurityGroup"
                            }
                        ],
                        "AssociatePublicIpAddress" : "true",
                        "DeviceIndex"              : "0",
                        "DeleteOnTermination"      : "true",
                        "SubnetId"                 : {
                            "Ref" : "SubnetId"
                        }
                    }
                ],
                "Tags"              : [
                    {
                        "Key" : "Application",
                        "Value" : {
                            "Ref" : "AWS::StackName"
                        }
                    },
					{
                        "Key" : "Name",
                        "Value" : "Craigs Workstation"
                    }
                ],
				"UserData" : { "Fn::Base64" : { "Fn::Join" : ["", [
					"<script>\n",

					"cfn-init.exe -v -s ", { "Ref" : "AWS::StackName" },
					" -r Desktop",
					" --region ", { "Ref" : "AWS::Region" }, "\n",

					"cfn-signal.exe -e %ERRORLEVEL% ", { "Fn::Base64" : { "Ref" : "WaitHandle" }}, "\n",

					"</script>"
					]]}
				}
            }
        },
		"WaitHandle" : {
            "Type" : "AWS::CloudFormation::WaitConditionHandle"
        },
		"WaitCondition" : {
		   "Type" : "AWS::CloudFormation::WaitCondition",
		   "DependsOn" : "Desktop",
		   "Properties" : {
			 "Handle" : {"Ref" : "WaitHandle"},
			 "Timeout" : "3600"
		   }
		}
    },
    "Outputs" : {
        "DesktopURL" : {
            "Value" : {
                "Fn::Join" : [
                    "",
                    [
                        "http://",
                        {
                            "Fn::GetAtt" : [
                                "Desktop",
                                "PublicDnsName"
                            ]
                        }
                    ]
                ]
            },
            "Description" : "URL for newly created windows workstation"
        }
    }
}

