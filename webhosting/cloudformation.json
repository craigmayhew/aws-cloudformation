{
    "AWSTemplateFormatVersion" : "2010-09-09",
    "Description"              : "Generate a VPC, Security Groups, Apache Webserver, EFS (For customer website data).",
    "Parameters"               : {
        "ParamInstanceType" : {
            "Description" : "WebServer EC2 instance type",
            "Type"        : "String",
            "Default"     : "m3.medium",
            "AllowedValues" : [
                "m3.medium",
                "m4.large",
                "m4.xlarge",
                "m4.2xlarge",
                "c4.2xlarge",
                "c4.4xlarge"
            ],
            "ConstraintDescription" : "must be a valid EC2 instance type."
        },
        "ParamWebDirMountPoint" : {
            "AllowedValues" : [
                "/srv"
            ],
            "Default"       : "/srv",
            "Type"          : "String"
        },
        "ParamKeyName"          : {
            "Type" : "AWS::EC2::KeyPair::KeyName",
            "Description" : "Name of an existing EC2 key pair to enable SSH access to the ECS instances"
        },
        "AccessKeyID"           : {
            "Description" : "Access key for accessing S3. These are normally associated to an AWS user.",
            "NoEcho"      : "true",
            "Type"        : "String"
        },
        "SecretAccessKeyID"     : {
            "Description" : "Secret access key for accessing S3. These are normally associated to an AWS user.",
            "NoEcho"      : "true",
            "Type"        : "String"
        }
    },
    "Mappings"                 : {
        "AWSInstanceType2Arch" : {
            "m3.medium" : {
                "Arch" : "64"
            },
            "m4.large"  : {
                "Arch" : "64"
            },
            "m4.xlarge" : {
                "Arch" : "64"
            },
            "m4.2xlarge" : {
                "Arch" : "64"
            },
            "c4.2xlarge"  : {
                "Arch" : "64"
            },
            "c4.4xlarge" : {
                "Arch" : "64"
            }
        },
        "AWSRegionArch2AMI"    : {
            "us-east-1" : {
                "64" : "ami-6869aa05"
            },
            "eu-west-1" : {
                "64" : "ami-f9dd458a"
            }
        }
    },
    "Resources"                : {
        "adireWebhostingPlatform" : {
            "Type" : "AWS::EC2::VPC",
            "Properties" : {
                "CidrBlock" : "10.0.0.0/16",
                "EnableDnsSupport" : "true",
                "EnableDnsHostnames" : "true",
                "InstanceTenancy"    : "default",
                "Tags"               : [
                    {
                        "Key" : "Application",
                        "Value" : {
                            "Ref" : "AWS::StackName"
                        }
                    },{
                        "Key" : "Name",
                        "Value" : {
							"Ref" : "AWS::StackName"
						}
                    }
                ]
            }
        },
        "SubnetIdA"               : {
            "Type" : "AWS::EC2::Subnet",
            "Properties" : {
                "AvailabilityZone" : "eu-west-1a",
                "CidrBlock"        : "10.0.0.0/24",
                "MapPublicIpOnLaunch" : "true",
                "Tags"                : [
                    {
                        "Key" : "Application",
                        "Value" : {
                            "Ref" : "AWS::StackName"
                        }
                    }
                ],
                "VpcId"               : {
                    "Ref" : "adireWebhostingPlatform"
                }
            }
        },
        "SubnetIdB"               : {
            "Type" : "AWS::EC2::Subnet",
            "Properties" : {
                "AvailabilityZone" : "eu-west-1b",
                "CidrBlock"        : "10.0.1.0/24",
                "MapPublicIpOnLaunch" : "true",
                "Tags"                : [
                    {
                        "Key" : "Application",
                        "Value" : {
                            "Ref" : "AWS::StackName"
                        }
                    }
                ],
                "VpcId"               : {
                    "Ref" : "adireWebhostingPlatform"
                }
            }
        },
        "SubnetIdC"               : {
            "Type" : "AWS::EC2::Subnet",
            "Properties" : {
                "AvailabilityZone" : "eu-west-1c",
                "CidrBlock"        : "10.0.2.0/24",
                "MapPublicIpOnLaunch" : "true",
                "Tags"                : [
                    {
                        "Key" : "Application",
                        "Value" : {
                            "Ref" : "AWS::StackName"
                        }
                    }
                ],
                "VpcId"               : {
                    "Ref" : "adireWebhostingPlatform"
                }
            }
        },
        "WebServerSecurityGroup"  : {
            "Type" : "AWS::EC2::SecurityGroup",
            "Properties" : {
                "GroupDescription" : "Enable HTTP, HTTPS, SSH",
                "SecurityGroupIngress" : [
                    {
                        "IpProtocol" : "tcp",
                        "FromPort"   : "80",
                        "ToPort"     : "80",
                        "CidrIp"     : "0.0.0.0/0"
                    },
                    {
                        "IpProtocol" : "tcp",
                        "FromPort"   : "443",
                        "ToPort"     : "443",
                        "CidrIp"     : "0.0.0.0/0"
                    },
                    {
                        "IpProtocol" : "tcp",
                        "FromPort"   : "22",
                        "ToPort"     : "22",
                        "CidrIp"     : "0.0.0.0/0"
                    }
                ],
                "VpcId"                : {
                    "Ref" : "adireWebhostingPlatform"
                }
            }
        },
        "WebServerEFSFileSystem"  : {
            "Type" : "AWS::EFS::FileSystem",
            "Properties" : {
                "FileSystemTags" : [
                    {
                        "Key" : "Application",
                        "Value" : {
                            "Ref" : "AWS::StackName"
                        }
                    },{
                        "Key" : "Name",
                        "Value" : {
							"Ref" : "AWS::StackName"
						}
                    }
                ]
            }
        },
        "EFSMountTargetA"         : {
            "Type" : "AWS::EFS::MountTarget",
            "Properties" : {
                "FileSystemId" : {
                    "Ref" : "WebServerEFSFileSystem"
                },
                "SecurityGroups" : [
                    {
                        "Ref" : "SecurityGroupFileSystem"
                    }
                ],
                "SubnetId"       : {
                    "Ref" : "SubnetIdA"
                }
            }
        },
        "EFSMountTargetB"         : {
            "Type" : "AWS::EFS::MountTarget",
            "Properties" : {
                "FileSystemId" : {
                    "Ref" : "WebServerEFSFileSystem"
                },
                "SecurityGroups" : [
                    {
                        "Ref" : "SecurityGroupFileSystem"
                    }
                ],
                "SubnetId"       : {
                    "Ref" : "SubnetIdB"
                }
            }
        },
        "EFSMountTargetC"         : {
            "Type" : "AWS::EFS::MountTarget",
            "Properties" : {
                "FileSystemId" : {
                    "Ref" : "WebServerEFSFileSystem"
                },
                "SecurityGroups" : [
                    {
                        "Ref" : "SecurityGroupFileSystem"
                    }
                ],
                "SubnetId"       : {
                    "Ref" : "SubnetIdC"
                }
            }
        },
        "SecurityGroupFileSystem" : {
            "Type" : "AWS::EC2::SecurityGroup",
            "Properties" : {
                "GroupDescription" : "SG for EFS",
                "SecurityGroupIngress" : [
                    {
                        "IpProtocol" : "tcp",
                        "FromPort"   : "2049",
                        "ToPort"     : "2049",
                        "CidrIp"     : "0.0.0.0/0"
                    }
                ],
                "Tags"                 : [
                    {
                        "Key" : "Application",
                        "Value" : {
                            "Ref" : "AWS::StackName"
                        }
                    }
                ],
                "VpcId"                : {
                    "Ref" : "adireWebhostingPlatform"
                }
            }
        },
        "WaitHandle"              : {
            "Type" : "AWS::CloudFormation::WaitConditionHandle"
        },
        "WaitCondition"           : {
            "Type" : "AWS::CloudFormation::WaitCondition",
            "DependsOn" : "WebServer",
            "Properties" : {
                "Handle" : {
                    "Ref" : "WaitHandle"
                },
                "Timeout" : "600"
            }
        },
        "InternetGateway"         : {
            "Type" : "AWS::EC2::InternetGateway",
            "Properties" : {
                "Tags" : [
                    {
                        "Key" : "Application",
                        "Value" : {
                            "Ref" : "AWS::StackId"
                        }
                    }
                ]
            }
        },
        "AttachGateway"           : {
            "DependsOn" : "InternetGateway",
            "Type"      : "AWS::EC2::VPCGatewayAttachment",
            "Properties" : {
                "VpcId" : {
                    "Ref" : "adireWebhostingPlatform"
                },
                "InternetGatewayId" : {
                    "Ref" : "InternetGateway"
                }
            }
        },
        "MyRouteTable"            : {
            "Type" : "AWS::EC2::RouteTable",
            "Properties" : {
                "VpcId" : {
                    "Ref" : "adireWebhostingPlatform"
                },
                "Tags"  : [
                    {
                        "Key" : "Application",
                        "Value" : {
                            "Ref" : "AWS::StackId"
                        }
                    }
                ]
            }
        },
        "Route"                   : {
            "Type" : "AWS::EC2::Route",
            "DependsOn" : [
                "AttachGateway",
                "MyRouteTable"
            ],
            "Properties" : {
                "RouteTableId" : {
                    "Ref" : "MyRouteTable"
                },
                "DestinationCidrBlock" : "0.0.0.0/0",
                "GatewayId"            : {
                    "Ref" : "InternetGateway"
                }
            }
        },
        "SubnetRouteTableAssociationA" : {
            "DependsOn" : [
                "SubnetIdA",
                "MyRouteTable"
            ],
            "Properties" : {
                "SubnetId" : {
                    "Ref" : "SubnetIdA"
                },
                "RouteTableId" : {
                    "Ref" : "MyRouteTable"
                }
            },
			"Type" : "AWS::EC2::SubnetRouteTableAssociation"
        },
        "SubnetRouteTableAssociationB" : {
            "DependsOn" : [
                "SubnetIdB",
                "MyRouteTable"
            ],
            "Properties" : {
                "SubnetId" : {
                    "Ref" : "SubnetIdB"
                },
                "RouteTableId" : {
                    "Ref" : "MyRouteTable"
                }
            },
			"Type" : "AWS::EC2::SubnetRouteTableAssociation"
        },
        "SubnetRouteTableAssociationC" : {
            "DependsOn" : [
                "SubnetIdC",
                "MyRouteTable"
            ],
            "Properties" : {
                "SubnetId" : {
                    "Ref" : "SubnetIdC"
                },
                "RouteTableId" : {
                    "Ref" : "MyRouteTable"
                }
            },
			"Type" : "AWS::EC2::SubnetRouteTableAssociation"
        },
        "WebServer"                    : {
			"DependsOn" : "EFSMountTargetA",
            "Type" : "AWS::EC2::Instance",
            "Metadata" : {
                "AWS::CloudFormation::Init" : {
                    "config" : {
						"packages" : {
							"yum" : {
								"php70": []
							}
                        },
						"files" : {
						    "/tmp/latest-web-directory.tar.gz" : {
							    "mode" : "600",
								"source" : "https://s3-eu-west-1.amazonaws.com/application-webhosting/backups-webdirectory/latest.tar.gz"
								
							}
						},
                        "sources"  : {
                            "/etc/httpd/conf.d" : "https://s3-eu-west-1.amazonaws.com/application-webhosting/apache-configs/apache-config.tar.gz"
                        },
						"commands" : {
							"01_mount" : {
								"command" : {
									"Fn::Join" : [
										"",
										[
											"mount -t nfs4 -o nfsvers=4.1 $(curl -s http://169.254.169.254/latest/meta-data/placement/availability-zone).",
											{
												"Ref" : "WebServerEFSFileSystem"
											},
											".efs.",
											{
												"Ref" : "AWS::Region"
											},
											".amazonaws.com:/ ",
											{
												"Ref" : "ParamWebDirMountPoint"
											}
										]
									]
								}
							},
							"02_unpack_web_dir" : {
								"command" : "tar -zxf /tmp/latest-web-directory.tar.gz ; rm /tmp/latest-web-directory.tar.gz"
							},
							"03_permissions" : {
								"command" : {
									"Fn::Join" : [
										"",
										[
											"chown ec2-user:ec2-user ",
											{
												"Ref" : "ParamWebDirMountPoint"
											}
										]
									]
								}
							},
							"04_permissions" : {
								"command" : "chmod -R 644 /etc/httpd/conf.d/"
							},
							"05_packages" : {
								"command" : "yum -y update"
							}
                        },
                        "services" : {
                            "sysvinit" : {
                                "httpd" : {
                                    "enabled" : "true",
                                    "ensureRunning" : "true"
                                }
                            }
                        }
                    }
                },
                "AWS::CloudFormation::Authentication" : {
                    "testS3" : {
                        "type" : "S3",
                        "accessKeyId" : {
                            "Ref" : "AccessKeyID"
                        },
                        "secretKey"   : {
                            "Ref" : "SecretAccessKeyID"
                        },
                        "buckets"     : [
                            "application-webhosting"
                        ]
                    }
                }
            },
            "Properties" : {
                "ImageId" : {
                    "Fn::FindInMap" : [
                        "AWSRegionArch2AMI",
                        {
                            "Ref" : "AWS::Region"
                        },
                        {
                            "Fn::FindInMap" : [
                                "AWSInstanceType2Arch",
                                {
                                    "Ref" : "ParamInstanceType"
                                },
                                "Arch"
                            ]
                        }
                    ]
                },
                "InstanceType" : {
                    "Ref" : "ParamInstanceType"
                },
                "KeyName"      : {
                    "Ref" : "ParamKeyName"
                },
                "NetworkInterfaces" : [
                    {
                        "GroupSet" : [
                            {
                                "Ref" : "WebServerSecurityGroup"
                            }
                        ],
                        "AssociatePublicIpAddress" : "true",
                        "DeviceIndex"              : "0",
                        "DeleteOnTermination"      : "true",
                        "SubnetId"                 : {
                            "Ref" : "SubnetIdA"
                        }
                    }
                ],
                "Tags"              : [
                    {
                        "Key" : "Application",
                        "Value" : {
                            "Ref" : "AWS::StackName"
                        }
                    },{
							"Key" : "Name",
							"Value" : {
								"Ref" : "AWS::StackName"
							}
						}
                ],
                "UserData"          : {
                    "Fn::Base64" : {
                        "Fn::Join" : [
                            "",
                            [
                                "#!/bin/bash -v\n",
                                "yum update -y aws-cfn-bootstrap\n",
								"# nfs-utils is used by EFS mount command\n",
								"yum install -y nfs-utils\n",
                                "# Helper function\n",
                                "function error_exit\n",
                                "{\n",
                                "  /opt/aws/bin/cfn-signal -e 1 -r \"$1\" '",
                                {
                                    "Ref" : "WaitHandle"
                                },
                                "'\n",
                                "  exit 1\n",
                                "}\n",
                                "# Install LAP packages\n",
                                "/opt/aws/bin/cfn-init -s ",
                                {
                                    "Ref" : "AWS::StackId"
                                },
                                " -r WebServer --region ",
                                {
                                    "Ref" : "AWS::Region"
                                },
                                " || error_exit 'Failed to run cfn-init'\n",
                                "# Web dir is /srv/\n",
                                "# All is well so signal success\n",
                                "/opt/aws/bin/cfn-signal -e 0 -r \"LAP Stack setup complete\" '",
                                {
                                    "Ref" : "WaitHandle"
                                },
                                "'\n"
                            ]
                        ]
                    }
                }
            }
        }
    },
    "Outputs"                  : {
        "WebsiteURL" : {
            "Value" : {
                "Fn::Join" : [
                    "",
                    [
                        "http://",
                        {
                            "Fn::GetAtt" : [
                                "WebServer",
                                "PublicDnsName"
                            ]
                        }
                    ]
                ]
            },
            "Description" : "URL for newly created website hosting service"
        }
    }
}
