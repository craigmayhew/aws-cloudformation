{
    "AWSTemplateFormatVersion" : "2010-09-09",
    "Description"              : "Generate a VPC, Security Groups, Apache Webserver, EFS (For customer website data).",
    "Parameters"               : {
        "ParamInstanceType" : {
            "Description" : "WebServer EC2 instance type",
            "Type"        : "String",
            "Default"     : "m3.medium",
            "AllowedValues" : [
                "m3.medium",
                "m4.large",
                "m4.xlarge",
                "m4.2xlarge",
                "c4.2xlarge",
                "c4.4xlarge"
            ],
            "ConstraintDescription" : "must be a valid EC2 instance type."
        },
        "ParamWebDirMountPoint" : {
            "AllowedValues" : [
                "/srv"
            ],
            "Default"       : "/srv",
            "Type"          : "String"
        },
        "ParamKeyName"          : {
            "Type" : "AWS::EC2::KeyPair::KeyName",
            "Description" : "Name of an existing EC2 key pair to enable SSH access to the ECS instances"
        },
        "AccessKeyID"           : {
            "Description" : "Access key for accessing S3. These are normally associated to an AWS user.",
            "NoEcho"      : "true",
            "Type"        : "String"
        },
        "SecretAccessKeyID"     : {
            "Description" : "Secret access key for accessing S3. These are normally associated to an AWS user.",
            "NoEcho"      : "true",
            "Type"        : "String"
        }
    },
    "Mappings"                 : {
        "AWSInstanceType2Arch" : {
            "m3.medium" : {
                "Arch" : "64"
            },
            "m4.large"  : {
                "Arch" : "64"
            },
            "m4.xlarge" : {
                "Arch" : "64"
            },
            "m4.2xlarge" : {
                "Arch" : "64"
            },
            "c4.2xlarge"  : {
                "Arch" : "64"
            },
            "c4.4xlarge" : {
                "Arch" : "64"
            }
        },
        "AWSRegionArch2AMI"    : {
            "us-east-1" : {
                "64" : "ami-6869aa05"
            },
            "eu-west-1" : {
                "64" : "ami-f9dd458a"
            }
        }
    },
    "Resources"                : {
        "ElasticLoadBalancer" : {
          "Type" : "AWS::ElasticLoadBalancing::LoadBalancer",
          "DependsOn": [ "WebServerA", "WebServerB", "WebServerC" ],
          "Properties" : {
            "Subnets" : [ { "Ref" : "SubnetIdA" },{ "Ref" : "SubnetIdB" },{ "Ref" : "SubnetIdC" } ],
            "Instances" : [ { "Ref" : "WebServerA" },{ "Ref" : "WebServerB" },{ "Ref" : "WebServerC" } ],
            "Listeners": [{
              "LoadBalancerPort": "80",
              "InstancePort": "80",
              "Protocol": "HTTP"
            }],
            "HealthCheck": {
              "Target": "HTTP:80/",
              "HealthyThreshold": "3",
              "UnhealthyThreshold": "5",
              "Interval": "30",
              "Timeout": "5"
            },
            "ConnectionDrainingPolicy": {
              "Enabled" : "true",
              "Timeout" : "60"
            },
            "SecurityGroups": [ { "Ref" : "WebServerSecurityGroup" } ]
          }
        },
        "adireWebhostingPlatform" : {
            "Type" : "AWS::EC2::VPC",
            "Properties" : {
                "CidrBlock" : "10.0.0.0/16",
                "EnableDnsSupport" : "true",
                "EnableDnsHostnames" : "true",
                "InstanceTenancy"    : "default",
                "Tags"               : [
                    {
                        "Key" : "Application",
                        "Value" : {
                            "Ref" : "AWS::StackName"
                        }
                    },{
                        "Key" : "Name",
                        "Value" : {
                            "Ref" : "AWS::StackName"
                        }
                    }
                ]
            }
        },
        "SubnetIdA"               : {
            "Type" : "AWS::EC2::Subnet",
            "Properties" : {
                "AvailabilityZone" : "eu-west-1a",
                "CidrBlock"        : "10.0.0.0/24",
                "MapPublicIpOnLaunch" : "true",
                "Tags"                : [
                    {
                        "Key" : "Application",
                        "Value" : {
                            "Ref" : "AWS::StackName"
                        }
                    }
                ],
                "VpcId"               : {
                    "Ref" : "adireWebhostingPlatform"
                }
            }
        },
        "SubnetIdB"               : {
            "Type" : "AWS::EC2::Subnet",
            "Properties" : {
                "AvailabilityZone" : "eu-west-1b",
                "CidrBlock"        : "10.0.1.0/24",
                "MapPublicIpOnLaunch" : "true",
                "Tags"                : [
                    {
                        "Key" : "Application",
                        "Value" : {
                            "Ref" : "AWS::StackName"
                        }
                    }
                ],
                "VpcId"               : {
                    "Ref" : "adireWebhostingPlatform"
                }
            }
        },
        "SubnetIdC"               : {
            "Type" : "AWS::EC2::Subnet",
            "Properties" : {
                "AvailabilityZone" : "eu-west-1c",
                "CidrBlock"        : "10.0.2.0/24",
                "MapPublicIpOnLaunch" : "true",
                "Tags"                : [
                    {
                        "Key" : "Application",
                        "Value" : {
                            "Ref" : "AWS::StackName"
                        }
                    }
                ],
                "VpcId"               : {
                    "Ref" : "adireWebhostingPlatform"
                }
            }
        },
        "WebServerSecurityGroup"  : {
            "Type" : "AWS::EC2::SecurityGroup",
            "Properties" : {
                "GroupDescription" : "Enable HTTP, HTTPS, SSH",
                "SecurityGroupIngress" : [
                    {
                        "IpProtocol" : "tcp",
                        "FromPort"   : "80",
                        "ToPort"     : "80",
                        "CidrIp"     : "0.0.0.0/0"
                    },
                    {
                        "IpProtocol" : "tcp",
                        "FromPort"   : "443",
                        "ToPort"     : "443",
                        "CidrIp"     : "0.0.0.0/0"
                    },
                    {
                        "IpProtocol" : "tcp",
                        "FromPort"   : "22",
                        "ToPort"     : "22",
                        "CidrIp"     : "0.0.0.0/0"
                    }
                ],
                "VpcId"                : {
                    "Ref" : "adireWebhostingPlatform"
                }
            }
        },
        "WebServerEFSFileSystem"  : {
            "Type" : "AWS::EFS::FileSystem",
            "Properties" : {
                "FileSystemTags" : [
                    {
                        "Key" : "Application",
                        "Value" : {
                            "Ref" : "AWS::StackName"
                        }
                    },{
                        "Key" : "Name",
                        "Value" : {
                            "Ref" : "AWS::StackName"
                        }
                    }
                ]
            }
        },
        "EFSMountTargetA"         : {
            "Type" : "AWS::EFS::MountTarget",
            "Properties" : {
                "FileSystemId" : {
                    "Ref" : "WebServerEFSFileSystem"
                },
                "SecurityGroups" : [
                    {
                        "Ref" : "SecurityGroupFileSystem"
                    }
                ],
                "SubnetId"       : {
                    "Ref" : "SubnetIdA"
                }
            }
        },
        "EFSMountTargetB"         : {
            "Type" : "AWS::EFS::MountTarget",
            "Properties" : {
                "FileSystemId" : {
                    "Ref" : "WebServerEFSFileSystem"
                },
                "SecurityGroups" : [
                    {
                        "Ref" : "SecurityGroupFileSystem"
                    }
                ],
                "SubnetId"       : {
                    "Ref" : "SubnetIdB"
                }
            }
        },
        "EFSMountTargetC"         : {
            "Type" : "AWS::EFS::MountTarget",
            "Properties" : {
                "FileSystemId" : {
                    "Ref" : "WebServerEFSFileSystem"
                },
                "SecurityGroups" : [
                    {
                        "Ref" : "SecurityGroupFileSystem"
                    }
                ],
                "SubnetId"       : {
                    "Ref" : "SubnetIdC"
                }
            }
        },
        "SecurityGroupFileSystem" : {
            "Type" : "AWS::EC2::SecurityGroup",
            "Properties" : {
                "GroupDescription" : "SG for EFS",
                "SecurityGroupIngress" : [
                    {
                        "IpProtocol" : "tcp",
                        "FromPort"   : "2049",
                        "ToPort"     : "2049",
                        "CidrIp"     : "0.0.0.0/0"
                    }
                ],
                "Tags"                 : [
                    {
                        "Key" : "Application",
                        "Value" : {
                            "Ref" : "AWS::StackName"
                        }
                    }
                ],
                "VpcId"                : {
                    "Ref" : "adireWebhostingPlatform"
                }
            }
        },
        "WaitHandle"              : {
            "Type" : "AWS::CloudFormation::WaitConditionHandle"
        },
        "WaitCondition"           : {
            "Type" : "AWS::CloudFormation::WaitCondition",
            "DependsOn" : "WebServerA",
            "Properties" : {
                "Handle" : {
                    "Ref" : "WaitHandle"
                },
                "Timeout" : "600"
            }
        },
        "InternetGateway"         : {
            "Type" : "AWS::EC2::InternetGateway",
            "Properties" : {
                "Tags" : [
                    {
                        "Key" : "Application",
                        "Value" : {
                            "Ref" : "AWS::StackId"
                        }
                    }
                ]
            }
        },
        "AttachGateway"           : {
            "DependsOn" : "InternetGateway",
            "Type"      : "AWS::EC2::VPCGatewayAttachment",
            "Properties" : {
                "VpcId" : {
                    "Ref" : "adireWebhostingPlatform"
                },
                "InternetGatewayId" : {
                    "Ref" : "InternetGateway"
                }
            }
        },
        "MyRouteTable"            : {
            "Type" : "AWS::EC2::RouteTable",
            "Properties" : {
                "VpcId" : {
                    "Ref" : "adireWebhostingPlatform"
                },
                "Tags"  : [
                    {
                        "Key" : "Application",
                        "Value" : {
                            "Ref" : "AWS::StackId"
                        }
                    }
                ]
            }
        },
        "Route"                   : {
            "Type" : "AWS::EC2::Route",
            "DependsOn" : [
                "AttachGateway",
                "MyRouteTable"
            ],
            "Properties" : {
                "RouteTableId" : {
                    "Ref" : "MyRouteTable"
                },
                "DestinationCidrBlock" : "0.0.0.0/0",
                "GatewayId"            : {
                    "Ref" : "InternetGateway"
                }
            }
        },
        "SubnetRouteTableAssociationA" : {
            "DependsOn" : [
                "SubnetIdA",
                "MyRouteTable"
            ],
            "Properties" : {
                "SubnetId" : {
                    "Ref" : "SubnetIdA"
                },
                "RouteTableId" : {
                    "Ref" : "MyRouteTable"
                }
            },
            "Type" : "AWS::EC2::SubnetRouteTableAssociation"
        },
        "SubnetRouteTableAssociationB" : {
            "DependsOn" : [
                "SubnetIdB",
                "MyRouteTable"
            ],
            "Properties" : {
                "SubnetId" : {
                    "Ref" : "SubnetIdB"
                },
                "RouteTableId" : {
                    "Ref" : "MyRouteTable"
                }
            },
            "Type" : "AWS::EC2::SubnetRouteTableAssociation"
        },
        "SubnetRouteTableAssociationC" : {
            "DependsOn" : [
                "SubnetIdC",
                "MyRouteTable"
            ],
            "Properties" : {
                "SubnetId" : {
                    "Ref" : "SubnetIdC"
                },
                "RouteTableId" : {
                    "Ref" : "MyRouteTable"
                }
            },
            "Type" : "AWS::EC2::SubnetRouteTableAssociation"
        },
        "WebServerA"                    : {
            "DependsOn" : [ "EFSMountTargetA", "CandCServer", "EFSMountTargetA"],
            "Type" : "AWS::EC2::Instance",
            "Metadata" : {
                "AWS::CloudFormation::Init" : {
                    "config" : {
                        "packages" : {
                            "yum" : {
                                "php70": []
                            }
                        },
                        "sources"  : {
                            "/etc/httpd/conf.d" : "https://s3-eu-west-1.amazonaws.com/application-webhosting/apache-configs/apache-config.tar.gz"
                        },
                        "commands" : {
                            "01_mount" : {
                                "command" : {
                                    "Fn::Join" : [
                                        "",
                                        [
                                            "mount -t nfs4 -o nfsvers=4.1 $(curl -s http://169.254.169.254/latest/meta-data/placement/availability-zone).",
                                            {
                                                "Ref" : "WebServerEFSFileSystem"
                                            },
                                            ".efs.",
                                            {
                                                "Ref" : "AWS::Region"
                                            },
                                            ".amazonaws.com:/ ",
                                            {
                                                "Ref" : "ParamWebDirMountPoint"
                                            }
                                        ]
                                    ]
                                }
                            },
                            "04_delete_default_httpd_configs" : {
                                "command" : "rm -f /etc/httpd/conf.d/autoindex.conf ; rm -f /etc/httpd/conf.d/notrace.conf ; rm -f /etc/httpd/conf.d/php.conf ; rm -f /etc/httpd/conf.d/php-conf.7.0 ; rm -f /etc/httpd/conf.d/README ; rm -f /etc/httpd/conf.d/userdir.conf ; rm -f /etc/httpd/conf.d/welcome.conf"
                            },
                            "05_permisiions" : {
                                "command" : "chmod -R 644 /etc/httpd/conf.d/"
                            },
                            "06_packages" : {
                                "command" : "yum -y update"
                            }
                        },
                        "services" : {
                            "sysvinit" : {
                                "httpd" : {
                                    "enabled" : "true",
                                    "ensureRunning" : "true"
                                }
                            }
                        }
                    }
                },
                "AWS::CloudFormation::Authentication" : {
                    "S3" : {
                        "type" : "S3",
                        "accessKeyId" : {"Ref" : "AccessKeyID"},
                        "secretKey"   : {"Ref" : "SecretAccessKeyID"},
                        "buckets"     : ["application-webhosting"]
                    }
                }
            },
            "Properties" : {
                "AvailabilityZone" : "eu-west-1a",
                "ImageId" : {
                    "Fn::FindInMap" : [
                        "AWSRegionArch2AMI",
                        {
                            "Ref" : "AWS::Region"
                        },
                        {
                            "Fn::FindInMap" : [
                                "AWSInstanceType2Arch",
                                {
                                    "Ref" : "ParamInstanceType"
                                },
                                "Arch"
                            ]
                        }
                    ]
                },
                "InstanceType" : {"Ref" : "ParamInstanceType"},
                "KeyName"      : {"Ref" : "ParamKeyName"},
                "NetworkInterfaces" : [
                    {
                        "GroupSet" : [
                            {
                                "Ref" : "WebServerSecurityGroup"
                            }
                        ],
                        "AssociatePublicIpAddress" : "true",
                        "DeviceIndex"              : "0",
                        "DeleteOnTermination"      : "true",
                        "SubnetId"                 : {
                            "Ref" : "SubnetIdA"
                        }
                    }
                ],
                "Tags"              : [
                    {
                        "Key" : "Application",
                        "Value" : {
                            "Ref" : "AWS::StackName"
                        }
                    },{
                            "Key" : "Name",
                            "Value" : {
                                "Ref" : "AWS::StackName"
                            }
                        }
                ],
                "UserData"          : {
                    "Fn::Base64" : {
                        "Fn::Join" : [
                            "",
                            [
                                "#!/bin/bash -v\n",
                                "yum update -y aws-cfn-bootstrap\n",
                                "# nfs-utils is used by EFS mount command\n",
                                "yum install -y nfs-utils\n",
                                "# Helper function\n",
                                "function error_exit\n",
                                "{\n",
                                "  /opt/aws/bin/cfn-signal -e 1 -r \"$1\" '",
                                {
                                    "Ref" : "WaitHandle"
                                },
                                "'\n",
                                "  exit 1\n",
                                "}\n",
                                "# Install LAP packages\n",
                                "/opt/aws/bin/cfn-init -s ",
                                {
                                    "Ref" : "AWS::StackId"
                                },
                                " -r WebServerA --region ",
                                {
                                    "Ref" : "AWS::Region"
                                },
                                " || error_exit 'Failed to run cfn-init on WebA'\n",
                                "# Web dir is /srv/\n",
                                "# All is well so signal success\n",
                                "/opt/aws/bin/cfn-signal -e 0 -r \"LAP Stack setup complete\" '",
                                {
                                    "Ref" : "WaitHandle"
                                },
                                "'\n"
                            ]
                        ]
                    }
                }
            }
        },
        "WebServerB"                    : {
            "DependsOn" : [ "EFSMountTargetB", "CandCServer", "EFSMountTargetB" ],
            "Type" : "AWS::EC2::Instance",
            "Metadata" : {
                "AWS::CloudFormation::Init" : {
                    "config" : {
                        "packages" : {
                            "yum" : {
                                "php70": []
                            }
                        },
                        "sources"  : {
                            "/etc/httpd/conf.d" : "https://s3-eu-west-1.amazonaws.com/application-webhosting/apache-configs/apache-config.tar.gz"
                        },
                        "commands" : {
                            "01_mount" : {
                                "command" : {
                                    "Fn::Join" : [
                                        "",
                                        [
                                            "mount -t nfs4 -o nfsvers=4.1 $(curl -s http://169.254.169.254/latest/meta-data/placement/availability-zone).",
                                            {
                                                "Ref" : "WebServerEFSFileSystem"
                                            },
                                            ".efs.",
                                            {
                                                "Ref" : "AWS::Region"
                                            },
                                            ".amazonaws.com:/ ",
                                            {
                                                "Ref" : "ParamWebDirMountPoint"
                                            }
                                        ]
                                    ]
                                }
                            },
                            "04_delete_default_httpd_configs" : {
                                "command" : "rm -f /etc/httpd/conf.d/autoindex.conf ; rm -f /etc/httpd/conf.d/notrace.conf ; rm -f /etc/httpd/conf.d/php.conf ; rm -f /etc/httpd/conf.d/php-conf.7.0 ; rm -f /etc/httpd/conf.d/README ; rm -f /etc/httpd/conf.d/userdir.conf ; rm -f /etc/httpd/conf.d/welcome.conf"
                            },
                            "05_permisiions" : {
                                "command" : "chmod -R 644 /etc/httpd/conf.d/"
                            },
                            "06_packages" : {
                                "command" : "yum -y update"
                            }
                        },
                        "services" : {
                            "sysvinit" : {
                                "httpd" : {
                                    "enabled" : "true",
                                    "ensureRunning" : "true"
                                }
                            }
                        }
                    }
                },
                "AWS::CloudFormation::Authentication" : {
                    "S3" : {
                        "type" : "S3",
                        "accessKeyId" : {"Ref" : "AccessKeyID"},
                        "secretKey"   : {"Ref" : "SecretAccessKeyID"},
                        "buckets"     : ["application-webhosting"]
                    }
                }
            },
            "Properties" : {
                "AvailabilityZone" : "eu-west-1b",
                "ImageId" : {
                    "Fn::FindInMap" : [
                        "AWSRegionArch2AMI",
                        {
                            "Ref" : "AWS::Region"
                        },
                        {
                            "Fn::FindInMap" : [
                                "AWSInstanceType2Arch",
                                {
                                    "Ref" : "ParamInstanceType"
                                },
                                "Arch"
                            ]
                        }
                    ]
                },
                "InstanceType" : {"Ref" : "ParamInstanceType"},
                "KeyName"      : {"Ref" : "ParamKeyName"},
                "NetworkInterfaces" : [
                    {
                        "GroupSet" : [
                            {
                                "Ref" : "WebServerSecurityGroup"
                            }
                        ],
                        "AssociatePublicIpAddress" : "true",
                        "DeviceIndex"              : "0",
                        "DeleteOnTermination"      : "true",
                        "SubnetId"                 : {
                            "Ref" : "SubnetIdB"
                        }
                    }
                ],
                "Tags"              : [
                    {
                        "Key" : "Application",
                        "Value" : {
                            "Ref" : "AWS::StackName"
                        }
                    },{
                        "Key" : "Name",
                        "Value" : {
                            "Ref" : "AWS::StackName"
                        }
                    }
                ],
                "UserData"          : {
                    "Fn::Base64" : {
                        "Fn::Join" : [
                            "",
                            [
                                "#!/bin/bash -v\n",
                                "yum update -y aws-cfn-bootstrap\n",
                                "# nfs-utils is used by EFS mount command\n",
                                "yum install -y nfs-utils\n",
                                "# Helper function\n",
                                "function error_exit\n",
                                "{\n",
                                "  /opt/aws/bin/cfn-signal -e 1 -r \"$1\" '",
                                {
                                    "Ref" : "WaitHandle"
                                },
                                "'\n",
                                "  exit 1\n",
                                "}\n",
                                "# Install LAP packages\n",
                                "/opt/aws/bin/cfn-init -s ",
                                {
                                    "Ref" : "AWS::StackId"
                                },
                                " -r WebServerB --region ",
                                {
                                    "Ref" : "AWS::Region"
                                },
                                " || error_exit 'Failed to run cfn-init on WebB'\n",
                                "# Web dir is /srv/\n",
                                "# All is well so signal success\n",
                                "/opt/aws/bin/cfn-signal -e 0 -r \"LAP Stack setup complete\" '",
                                {
                                    "Ref" : "WaitHandle"
                                },
                                "'\n"
                            ]
                        ]
                    }
                }
            }
        },
        "WebServerC"                    : {
            "DependsOn" : [ "EFSMountTargetC", "CandCServer", "EFSMountTargetC" ],
            "Type" : "AWS::EC2::Instance",
            "Metadata" : {
                "AWS::CloudFormation::Init" : {
                    "config" : {
                        "packages" : {
                            "yum" : {
                                "php70": []
                            }
                        },
                        "sources"  : {
                            "/etc/httpd/conf.d" : "https://s3-eu-west-1.amazonaws.com/application-webhosting/apache-configs/apache-config.tar.gz"
                        },
                        "commands" : {
                            "01_mount" : {
                                "command" : {
                                    "Fn::Join" : [
                                        "",
                                        [
                                            "mount -t nfs4 -o nfsvers=4.1 $(curl -s http://169.254.169.254/latest/meta-data/placement/availability-zone).",
                                            {
                                                "Ref" : "WebServerEFSFileSystem"
                                            },
                                            ".efs.",
                                            {
                                                "Ref" : "AWS::Region"
                                            },
                                            ".amazonaws.com:/ ",
                                            {
                                                "Ref" : "ParamWebDirMountPoint"
                                            }
                                        ]
                                    ]
                                }
                            },
                            "04_delete_default_httpd_configs" : {
                                "command" : "rm -f /etc/httpd/conf.d/autoindex.conf ; rm -f /etc/httpd/conf.d/notrace.conf ; rm -f /etc/httpd/conf.d/php.conf ; rm -f /etc/httpd/conf.d/php-conf.7.0 ; rm -f /etc/httpd/conf.d/README ; rm -f /etc/httpd/conf.d/userdir.conf ; rm -f /etc/httpd/conf.d/welcome.conf"
                            },
                            "05_permisiions" : {
                                "command" : "chmod -R 644 /etc/httpd/conf.d/"
                            },
                            "06_packages" : {
                                "command" : "yum -y update"
                            }
                        },
                        "services" : {
                            "sysvinit" : {
                                "httpd" : {
                                    "enabled" : "true",
                                    "ensureRunning" : "true"
                                }
                            }
                        }
                    }
                },
                "AWS::CloudFormation::Authentication" : {
                    "S3" : {
                        "type" : "S3",
                        "accessKeyId" : {"Ref" : "AccessKeyID"},
                        "secretKey"   : {"Ref" : "SecretAccessKeyID"},
                        "buckets"     : ["application-webhosting"]
                    }
                }
            },
            "Properties" : {
                "AvailabilityZone" : "eu-west-1c",
                "ImageId" : {
                    "Fn::FindInMap" : [
                        "AWSRegionArch2AMI",
                        {
                            "Ref" : "AWS::Region"
                        },
                        {
                            "Fn::FindInMap" : [
                                "AWSInstanceType2Arch",
                                {
                                    "Ref" : "ParamInstanceType"
                                },
                                "Arch"
                            ]
                        }
                    ]
                },
                "InstanceType" : {"Ref" : "ParamInstanceType"},
                "KeyName"      : {"Ref" : "ParamKeyName"},
                "NetworkInterfaces" : [
                    {
                        "GroupSet" : [
                            {
                                "Ref" : "WebServerSecurityGroup"
                            }
                        ],
                        "AssociatePublicIpAddress" : "true",
                        "DeviceIndex"              : "0",
                        "DeleteOnTermination"      : "true",
                        "SubnetId"                 : {
                            "Ref" : "SubnetIdC"
                        }
                    }
                ],
                "Tags"              : [
                    {
                        "Key" : "Application",
                        "Value" : {
                            "Ref" : "AWS::StackName"
                        }
                    },{
                            "Key" : "Name",
                            "Value" : {
                                "Ref" : "AWS::StackName"
                            }
                        }
                ],
                "UserData"          : {
                    "Fn::Base64" : {
                        "Fn::Join" : [
                            "",
                            [
                                "#!/bin/bash -v\n",
                                "yum update -y aws-cfn-bootstrap\n",
                                "# nfs-utils is used by EFS mount command\n",
                                "yum install -y nfs-utils\n",
                                "# Helper function\n",
                                "function error_exit\n",
                                "{\n",
                                "  /opt/aws/bin/cfn-signal -e 1 -r \"$1\" '",
                                {
                                    "Ref" : "WaitHandle"
                                },
                                "'\n",
                                "  exit 1\n",
                                "}\n",
                                "# Install LAP packages\n",
                                "/opt/aws/bin/cfn-init -s ",
                                {
                                    "Ref" : "AWS::StackId"
                                },
                                " -r WebServerC --region ",
                                {
                                    "Ref" : "AWS::Region"
                                },
                                " || error_exit 'Failed to run cfn-init on WebC'\n",
                                "# Web dir is /srv/\n",
                                "# All is well so signal success\n",
                                "/opt/aws/bin/cfn-signal -e 0 -r \"LAP Stack setup complete\" '",
                                {
                                    "Ref" : "WaitHandle"
                                },
                                "'\n"
                            ]
                        ]
                    }
                }
            }
        },
        "CandCServer"                    : {
            "DependsOn" : "EFSMountTargetA",
            "Type" : "AWS::EC2::Instance",
            "Metadata" : {
                "AWS::CloudFormation::Init" : {
                    "config" : {
                        "packages" : {
                            "yum" : {
                                "php70": []
                            }
                        },
                        "files" : {
                            "/tmp/latest-web-directory.tar.gz" : {
                                "mode" : "600",
                                "source" : "https://s3-eu-west-1.amazonaws.com/application-webhosting/backups-webdirectory/latest.tar.gz"
                            },
                            "/etc/cron.d/backup": {
                                "content": { 
                                    "Fn::Join": [
                                        "",
                                        [
                                        "* * * * 0 root cd /root/ && php efs-backup.php",
                                        "\n"
                                        ]
                                    ]
                                },
                                "group": "root", 
                                "mode": "000644", 
                                "owner": "root"
                            },
                            "/root/.aws/credentials" : {
                                "content": { 
                                    "Fn::Join": [
                                        "\n",
                                        [
                                          "[application-webhosting]",
                                          "aws_access_key_id = ",{"Ref" : "AccessKeyID"},
                                          "aws_secret_access_key = ",{"Ref" : "SecretAccessKeyID"}
                                        ]
                                    ]
                                },
                                "group": "root", 
                                "mode": "000600", 
                                "owner": "root"
                            },
                            "/home/ec2-user/efs-backup.php": {
                                "mode" : "600",
                                "content": {
                                    "Fn::Join" : [
                                      "\n",
                                      ["<?php",

                                      "exec('cd /root/');",
                                      "exec('curl -sS https://getcomposer.org/installer | php');",
                                      "file_put_contents('/root/composer.json','{",
                                      "    \"require\": {",
                                      "        \"aws/aws-sdk-php\": \"2.*\"",
                                      "    }",
                                      "}');",
                                      "exec('php composer.phar install');",
                                      
                                      "require '/root/vendor/autoload.php';",
                                      
                                      "use Aws\\S3\\S3Client;",
                                      
                                      "const BUCKET = 'application-webhosting';",
                                      "const FILENAME = '/tmp/latest-web-directory.tar.gz';",
                                      
                                      "//move old local backup",
                                      "exec('mv '.FILENAME.' '.FILENAME.'.previous');",
                                      
                                      "//create backup",
                                      "exec('tar -czvf '.FILENAME.' /srv');",
                                      
                                      "//load profile into client object",
                                      "$client = S3Client::factory(array(",
                                      "    'profile' => BUCKET",
                                      "));",
                                      
                                      "//uploade file",
                                      "$result = $client->putObject(array(",
                                      "    'Bucket'     => BUCKET,",
                                      "    'Key'        => 'backups-webdirectory/latest.tar.gz',",
                                      "    'SourceFile' => FILENAME",
                                      "));"]
                                    ]
                                }
                            }
                        },
                        "commands" : {
                            "01_mount" : {
                                "command" : {
                                    "Fn::Join" : [
                                        "",
                                        [
                                            "mount -t nfs4 -o nfsvers=4.1 $(curl -s http://169.254.169.254/latest/meta-data/placement/availability-zone).",
                                            {
                                                "Ref" : "WebServerEFSFileSystem"
                                            },
                                            ".efs.",
                                            {
                                                "Ref" : "AWS::Region"
                                            },
                                            ".amazonaws.com:/ ",
                                            {
                                                "Ref" : "ParamWebDirMountPoint"
                                            }
                                        ]
                                    ]
                                }
                            },
                            "02_unpack_web_dir" : {
                                "command" : "tar -zxf /tmp/latest-web-directory.tar.gz ; rm /tmp/latest-web-directory.tar.gz"
                            },
                            "03_permissions" : {
                                "command" : {
                                    "Fn::Join" : [
                                        "",
                                        [
                                            "chown ec2-user:ec2-user ",
                                            {
                                                "Ref" : "ParamWebDirMountPoint"
                                            }
                                        ]
                                    ]
                                }
                            },
                            "06_packages" : {
                                "command" : "yum -y update"
                            }
                        }
                    }
                },
                "AWS::CloudFormation::Authentication" : {
                    "S3" : {
                        "type" : "S3",
                        "accessKeyId" : {"Ref" : "AccessKeyID"},
                        "secretKey"   : {"Ref" : "SecretAccessKeyID"},
                        "buckets"     : ["application-webhosting"]
                    }
                }
            },
            "Properties" : {
                "ImageId" : {
                    "Fn::FindInMap" : [
                        "AWSRegionArch2AMI",
                        {
                            "Ref" : "AWS::Region"
                        },
                        {
                            "Fn::FindInMap" : [
                                "AWSInstanceType2Arch",
                                {
                                    "Ref" : "ParamInstanceType"
                                },
                                "Arch"
                            ]
                        }
                    ]
                },
                "InstanceType" : {"Ref" : "ParamInstanceType"},
                "KeyName"      : {"Ref" : "ParamKeyName"},
                "NetworkInterfaces" : [
                    {
                        "GroupSet" : [
                            {
                                "Ref" : "WebServerSecurityGroup"
                            }
                        ],
                        "AssociatePublicIpAddress" : "true",
                        "DeviceIndex"              : "0",
                        "DeleteOnTermination"      : "true",
                        "SubnetId"                 : {
                            "Ref" : "SubnetIdA"
                        }
                    }
                ],
                "Tags"              : [
                    {
                        "Key" : "Application",
                        "Value" : {
                            "Ref" : "AWS::StackName"
                        }
                    },{
                            "Key" : "Name",
                            "Value" : {
                                "Ref" : "AWS::StackName"
                            }
                        }
                ],
                "UserData"          : {
                    "Fn::Base64" : {
                        "Fn::Join" : [
                            "",
                            [
                                "#!/bin/bash -v\n",
                                "yum update -y aws-cfn-bootstrap\n",
                                "# nfs-utils is used by EFS mount command\n",
                                "yum install -y nfs-utils\n",
                                "# Helper function\n",
                                "function error_exit\n",
                                "{\n",
                                "  /opt/aws/bin/cfn-signal -e 1 -r \"$1\" '",
                                {
                                    "Ref" : "WaitHandle"
                                },
                                "'\n",
                                "  exit 1\n",
                                "}\n",
                                "# Install LAP packages\n",
                                "/opt/aws/bin/cfn-init -s ",
                                {
                                    "Ref" : "AWS::StackId"
                                },
                                " -r CandCServer --region ",
                                {
                                    "Ref" : "AWS::Region"
                                },
                                " || error_exit 'Failed to run cfn-init on CandC Server'\n",
                                "# Web dir is /srv/\n",
                                "# All is well so signal success\n",
                                "/opt/aws/bin/cfn-signal -e 0 -r \"LAP Stack setup complete\" '",
                                {
                                    "Ref" : "WaitHandle"
                                },
                                "'\n"
                            ]
                        ]
                    }
                }
            }
        },
        "emailsrvrHealthCheck": {
          "Type": "AWS::Route53::HealthCheck",
          "Properties": {
            "HealthCheckConfig": {
              "Port": "993",
              "Type": "TCP",
              "FullyQualifiedDomainName": "secure.emailsrvr.com",
              "RequestInterval": "30",
              "FailureThreshold": "3"
            },
            "HealthCheckTags" : [{
              "Key" : "Application",
              "Value" : {
                "Ref" : "AWS::StackName"
              }
            }]
          }
        },
        "awsAdireHealthCheck": {
          "Type": "AWS::Route53::HealthCheck",
          "Properties": {
            "HealthCheckConfig": {
              "Port": "80",
              "Type": "HTTP",
              "ResourcePath": "/",
              "FullyQualifiedDomainName": "adire.co.uk",
              "RequestInterval": "30",
              "FailureThreshold": "3"
            },
            "HealthCheckTags" : [{
              "Key" : "Application",
              "Value" : {
                "Ref" : "AWS::StackName"
              }
            }]
          }
        }
    },
    "Outputs"                  : {
        "WebsiteURL" : {
            "Value" : {
                "Fn::Join" : [
                    "",
                    [
                        "    ELB: http://",
                        {
                            "Fn::GetAtt" : [
                                "ElasticLoadBalancer",
                                "DNSName"
                            ]
                        },
                        "    CandC: http://",
                        {
                            "Fn::GetAtt" : [
                                "CandCServer",
                                "PublicDnsName"
                            ]
                        }
                    ]
                ]
            },
            "Description" : "URL for newly created website hosting service"
        }
    }
}
